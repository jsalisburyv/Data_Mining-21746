library(scales)
library(reshape)
set.seed(999)
df <- read.csv("salaries.csv", stringsAsFactors = TRUE)
summary(df)
str(df)
anyNA(df)
df$ID <- seq.int(nrow(df))
df$salary <- NULL
df$remote_ratio <- as.factor(df$remote_ratio)
levels(df$remote_ratio) <- list("Office" = 0, "Hybrid" = 50,  "Remote" = 100)
df$salary_group <- cut(df$salary_in_usd, c(0, 25000, 50000, 75000, 100000, 125000, 150000, 200000, 250000, 1000000))
df$salary_group <- as.factor(df$salary_group)
# group df$employee_residence to different regions in the world. The data is in ISO 3166-1 alpha-2 format. Regions like North America, Europe, Asia, etc.
df$employee_region <- as.factor(df$employee_residence)
levels(df$employee_region) <- list(
"North America" = c("US", "CA", "MX"),
"South America" = c("AR", "BO", "BR", "CL", "CO", "EC", "PE", "PY", "UY", "VE"),
"Central America" = c("BZ", "CR", "DO", "GT", "HN", "NI", "PA", "PR", "SV"),
"Europe" = c("AT", "AX", "BE", "BG", "CH", "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GR", "HR", "HU", "IE", "IS", "IT", "JE", "LT", "LU", "LV", "MD", "MT", "NL", "NO", "PL", "PT", "RO", "RU", "RS", "SE", "SI", "SK", "TR", "UA"),
"Asia" = c("AE", "AF", "AM", "AZ", "BD", "BH", "BN", "CN", "GE", "HK", "ID", "IL", "IN", "IQ", "IR", "JO", "JP", "KG", "KH", "KP", "KR", "KW", "KZ", "LA", "LB", "LK", "MM", "MN", "MO", "MV", "MY", "NP", "OM", "PH", "PK", "QA", "SA", "SG", "SY", "TH", "TJ", "TM", "TW", "UZ", "VN", "YE"),
"Africa" = c("AO", "BF", "BI", "BJ", "BW", "CD", "CF", "CG", "CI", "CM", "CV", "DJ", "DZ", "EG", "EH", "ER", "ET", "GA", "GH", "GM", "GN", "GQ", "GW", "KE", "KM", "LR", "LS", "LY", "MA", "MG", "ML", "MR", "MU", "MW", "MZ", "NA", "NE", "NG", "RE", "RW", "SC", "SD", "SH", "SL", "SN", "SO", "ST", "SZ", "TD", "TG", "TN", "TZ", "UG", "YT", "ZA", "ZM", "ZW"),
"Oceania" = c("AU", "FJ", "FM", "GU", "KI", "MH", "MP", "NC", "NF", "NR", "NU", "NZ", "PF", "PG", "PN", "PW", "SB", "TK", "TO", "TV", "UM", "VU", "WF", "WS"))
df$company_region <- as.factor(df$company_location)
levels(df$company_region) <- list(
"North America" = c("US", "CA", "MX"),
"South America" = c("AR", "BO", "BR", "CL", "CO", "EC", "PE", "PY", "UY", "VE"),
"Central America" = c("BZ", "CR", "DO", "GT", "HN", "NI", "PA", "PR", "SV"),
"Europe" = c("AT", "AL", "AX", "BE", "BG", "CH", "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GR", "HR", "HU", "IE", "IS", "IT", "JE", "LT", "LU", "LV", "MD", "MT", "NL", "NO", "PL", "PT", "RO", "RU", "RS", "SE", "SI", "SK", "TR", "UA"),
"Asia" = c("AE", "AF", "AM", "AZ", "BD", "BH", "BN", "CN", "GE", "HK", "ID", "IL", "IN", "IQ", "IR", "JO", "JP", "KG", "KH", "KP", "KR", "KW", "KZ", "LA", "LB", "LK", "MM", "MN", "MO", "MV", "MY", "NP", "OM", "PH", "PK", "QA", "SA", "SG", "SY", "TH", "TJ", "TM", "TW", "UZ", "VN", "YE"),
"Africa" = c("AO", "BF", "BI", "BJ", "BW", "CD", "CF", "CG", "CI", "CM", "CV", "DJ", "DZ", "EG", "EH", "ER", "ET", "GA", "GH", "GM", "GN", "GQ", "GW", "KE", "KM", "LR", "LS", "LY", "MA", "MG", "ML", "MR", "MU", "MW", "MZ", "NA", "NE", "NG", "RE", "RW", "SC", "SD", "SH", "SL", "SN", "SO", "ST", "SZ", "TD", "TG", "TN", "TZ", "UG", "YT", "ZA", "ZM", "ZW"),
"Oceania" = c("AU", "AS", "FJ", "FM", "GU", "KI", "MH", "MP", "NC", "NF", "NR", "NU", "NZ", "PF", "PG", "PN", "PW", "SB", "TK", "TO", "TV", "UM", "VU", "WF", "WS"))
summary(df)
aux <- data.frame(matrix(0, nrow = length(levels(df$company_region)), ncol = length(levels(df$company_region))))
colnames(aux) <- levels(df$company_region)
rownames(aux) <- levels(df$company_region)
for (i in 1:nrow(aux)) {
for (j in 1:ncol(aux)) {
aux[i, j] <- length(which(df$company_region == colnames(aux)[j] & df$employee_region == rownames(aux)[i]))
}
}
data_long <- aux %>%
rownames_to_column %>%
gather(key = 'key', value = 'value', -rowname) %>%
filter(value > 0)
colnames(data_long) <- c("source", "target", "value")
data_long$target <- paste(data_long$target, " ", sep="")
nodes <- data.frame(name=c(as.character(data_long$source), as.character(data_long$target)) %>% unique())
data_long$IDsource=match(data_long$source, nodes$name)-1
data_long$IDtarget=match(data_long$target, nodes$name)-1
sankeyNetwork(Links = data_long, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, nodeWidth=40, fontSize=13, nodePadding=20)
levels(factor(df$job_title))
df$industry <- ifelse( grepl("data", df$job_title, ignore.case = T), "DATA", "OTHER")
df$industry <- ifelse( grepl("machine", df$job_title, ignore.case = T), "ML/AI", df$industry)
df$industry <- ifelse( grepl("ML", df$job_title, ignore.case = T), "ML/AI", df$industry)
df$industry <- ifelse( grepl("AI", df$job_title, ignore.case = T), "ML/AI", df$industry)
df$industry <- as.factor(df$industry)
df$boss <- ifelse(grepl("head", df$job_title, ignore.case = T), TRUE, FALSE)
df$boss <- ifelse(grepl("lead", df$job_title, ignore.case = T), TRUE, df$boss)
df$boss <- ifelse(grepl("principal", df$job_title, ignore.case = T), TRUE, df$boss)
df$boss <- ifelse(grepl("director", df$job_title, ignore.case = T), TRUE, df$boss)
df$role <- ifelse(grepl("scientist", df$job_title, ignore.case = T), "SCIENTIST", "OTHER")
df$role <- ifelse(grepl("engineer", df$job_title, ignore.case = T), "ENGINEER", df$role)
df$role <- ifelse(grepl("analyst", df$job_title, ignore.case = T), "ANALYST", df$role)
df$role <- ifelse(grepl("manager", df$job_title, ignore.case = T), "MANAGER", df$role)
df$role <- ifelse(grepl("architect", df$job_title, ignore.case = T), "ARCHITECT", df$role)
df$role <- ifelse(grepl("developer", df$job_title, ignore.case = T), "DEVELOPER", df$role)
df$role <- as.factor(df$role)
df$research <- ifelse(grepl("research", df$job_title, ignore.case = T), TRUE, FALSE)
summary(df)
mean(df$salary_in_usd)
mean(df[df$boss == 'NO', 'salary_in_usd'])
mean(df[df$boss == 'YES', 'salary_in_usd'])
numerics_names <- colnames(df[, sapply(df, is.numeric)])
factors_names <- colnames(df[, sapply(df, is.factor)])
for (i in 1:length(numerics_names)){
print(ggplot(df, aes_string(x= numerics_names[i])) +
ggdist::stat_halfeye(
adjust=0.5,
justification = -.2,
.width=0
) +
geom_boxplot(
width = .1,
alpha = 0.5
) +
labs(title=paste("Distribution and boxplot of",numerics_names[i]), y="count"))
}
for (i in 1:length(factors_names)){
print(ggplot(df, aes_string(x= factors_names[i])) +
geom_bar()+
labs(title=paste("Histogram of",factors_names[i]),y="count"))
}
plot(df$employee_residence, df$salary_in_usd, xlab="Employee Residence", ylab="Salary in USD")
plot(df$company_size, df$salary_in_usd, xlab="Company Size", ylab="Salary in USD")
plot(df$company_location, df$salary_in_usd, xlab="Company Location", ylab="Salary in USD")
plot(df$experience_level, df$salary_in_usd, xlab="Experience Level", ylab="Salary in USD")
plot(df$remote_ratio, df$salary_in_usd, xlab="Remote Ratio", ylab="Salary in USD")
y_2020 <- df[df$work_year == 2020,]
y_2021 <- df[df$work_year == 2021,]
y_2022 <- df[df$work_year == 2022,]
y_2020 <- y_2020 %>% group_by(remote_ratio) %>% summarise(count = n())
y_2021 <- y_2021 %>% group_by(remote_ratio) %>% summarise(count = n())
y_2022 <- y_2022 %>% group_by(remote_ratio) %>% summarise(count = n())
y_2020$percentage <- y_2020$count / sum(y_2020$count) * 100
y_2021$percentage <- y_2021$count / sum(y_2021$count) * 100
y_2022$percentage <- y_2022$count / sum(y_2022$count) * 100
y_2020$work_year <- 2020
y_2021$work_year <- 2021
y_2022$work_year <- 2022
y <- rbind(y_2020, y_2021, y_2022)
ggplot(y, aes(x = work_year, y = percentage, group = remote_ratio, color = remote_ratio)) + geom_line() + geom_point() + labs(x = "Work Year", y = "Percentage of Remote Ratio", title = "Remote Ratio by Work Year") + theme(plot.title = element_text(hjust = 0.5))
f <- ggplot(df, aes(x=reorder(experience_level,salary_in_usd), y=salary_in_usd))+
geom_boxplot()
f
dfEN = df[df$experience_level=='EN',]
quantiles <- quantile(dfEN$salary_in_usd, c(0.05,0.95))
dfEN <- dfEN[dfEN$salary_in_usd > quantiles[1] & dfEN$salary_in_usd < quantiles[2],]
dfEN <- dfEN[c('salary_in_usd')]
clsEN <- kmeans(x=dfEN, centers=3)
dfEN$cluster <- as.character(clsEN$cluster)
f <- ggplot(data=dfEN,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfMI = df[df$experience_level=='MI',]
quantiles <- quantile(dfMI$salary_in_usd, c(0.05,0.95))
dfMI <- dfMI[dfMI$salary_in_usd > quantiles[1] & dfMI$salary_in_usd < quantiles[2],]
dfMI <- dfMI[c('salary_in_usd')]
clsMI <- kmeans(x=dfMI, centers=3)
dfMI$cluster <- as.character(clsMI$cluster)
f <- ggplot(data=dfMI,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfSE = df[df$experience_level=='SE',]
quantiles <- quantile(dfSE$salary_in_usd, c(0.05,0.95))
dfSE <- dfSE[dfSE$salary_in_usd > quantiles[1] & dfSE$salary_in_usd < quantiles[2],]
dfSE <- dfSE[c('salary_in_usd')]
clsSE <- kmeans(x=dfSE, centers=3)
dfSE$cluster <- as.character(clsSE$cluster)
f <- ggplot(data=dfSE,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfEX = df[df$experience_level=='EX',]
quantiles <- quantile(dfEX$salary_in_usd, c(0.05,0.95))
dfEX <- dfEX[dfEX$salary_in_usd > quantiles[1] & dfEX$salary_in_usd < quantiles[2],]
dfEX <- dfEX[c('salary_in_usd')]
clsEX <- kmeans(x=dfEX, centers=3)
dfEX$cluster <- as.character(clsEX$cluster)
f <- ggplot(data=dfEX,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfEN = df[df$experience_level=='EN',]
quantiles <- quantile(dfEN$salary_in_usd, c(0.05,0.95))
dfEN <- dfEN[dfEN$salary_in_usd > quantiles[1] & dfEN$salary_in_usd < quantiles[2],]
dfEN <- dfEN[c('salary_in_usd')]
clsEN <- kmeans(x=dfEN, centers=3)
dfEN$cluster <- as.character(clsEN$cluster)
f <- ggplot(data=dfEN,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfMI = df[df$experience_level=='MI',]
quantiles <- quantile(dfMI$salary_in_usd, c(0.05,0.95))
dfMI <- dfMI[dfMI$salary_in_usd > quantiles[1] & dfMI$salary_in_usd < quantiles[2],]
dfMI <- dfMI[c('salary_in_usd')]
clsMI <- kmeans(x=dfMI, centers=3)
dfMI$cluster <- as.character(clsMI$cluster)
f <- ggplot(data=dfMI,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfSE = df[df$experience_level=='SE',]
quantiles <- quantile(dfSE$salary_in_usd, c(0.05,0.95))
dfSE <- dfSE[dfSE$salary_in_usd > quantiles[1] & dfSE$salary_in_usd < quantiles[2],]
dfSE <- dfSE[c('salary_in_usd')]
clsSE <- kmeans(x=dfSE, centers=3)
dfSE$cluster <- as.character(clsSE$cluster)
f <- ggplot(data=dfSE,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfEX = df[df$experience_level=='EX',]
quantiles <- quantile(dfEX$salary_in_usd, c(0.05,0.95))
dfEX <- dfEX[dfEX$salary_in_usd > quantiles[1] & dfEX$salary_in_usd < quantiles[2],]
dfEX <- dfEX[c('salary_in_usd')]
clsEX <- kmeans(x=dfEX, centers=3)
dfEX$cluster <- as.character(clsEX$cluster)
f <- ggplot(data=dfEX,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfEN = df[df$experience_level=='EN',]
quantiles <- quantile(dfEN$salary_in_usd, c(0.05,0.95))
dfEN <- dfEN[dfEN$salary_in_usd > quantiles[1] & dfEN$salary_in_usd < quantiles[2],]
dfEN <- dfEN[c('salary_in_usd')]
clsEN <- kmeans(x=dfEN, centers=3)
dfEN$cluster <- as.character(clsEN$cluster)
f <- ggplot(data=dfEN,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfMI = df[df$experience_level=='MI',]
quantiles <- quantile(dfMI$salary_in_usd, c(0.05,0.95))
dfMI <- dfMI[dfMI$salary_in_usd > quantiles[1] & dfMI$salary_in_usd < quantiles[2],]
dfMI <- dfMI[c('salary_in_usd')]
clsMI <- kmeans(x=dfMI, centers=3)
dfMI$cluster <- as.character(clsMI$cluster)
f <- ggplot(data=dfMI,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfSE = df[df$experience_level=='SE',]
quantiles <- quantile(dfSE$salary_in_usd, c(0.05,0.95))
dfSE <- dfSE[dfSE$salary_in_usd > quantiles[1] & dfSE$salary_in_usd < quantiles[2],]
dfSE <- dfSE[c('salary_in_usd')]
clsSE <- kmeans(x=dfSE, centers=3)
dfSE$cluster <- as.character(clsSE$cluster)
f <- ggplot(data=dfSE,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfEX = df[df$experience_level=='EX',]
quantiles <- quantile(dfEX$salary_in_usd, c(0.05,0.95))
dfEX <- dfEX[dfEX$salary_in_usd > quantiles[1] & dfEX$salary_in_usd < quantiles[2],]
dfEX <- dfEX[c('salary_in_usd')]
clsEX <- kmeans(x=dfEX, centers=3)
dfEX$cluster <- as.character(clsEX$cluster)
f <- ggplot(data=dfEX,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
set.seed(42)
dfEN = df[df$experience_level=='EN',]
quantiles <- quantile(dfEN$salary_in_usd, c(0.05,0.95))
dfEN <- dfEN[dfEN$salary_in_usd > quantiles[1] & dfEN$salary_in_usd < quantiles[2],]
dfEN <- dfEN[c('salary_in_usd')]
clsEN <- kmeans(x=dfEN, centers=3)
dfEN$cluster <- as.character(clsEN$cluster)
f <- ggplot(data=dfEN,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfMI = df[df$experience_level=='MI',]
quantiles <- quantile(dfMI$salary_in_usd, c(0.05,0.95))
dfMI <- dfMI[dfMI$salary_in_usd > quantiles[1] & dfMI$salary_in_usd < quantiles[2],]
dfMI <- dfMI[c('salary_in_usd')]
clsMI <- kmeans(x=dfMI, centers=3)
dfMI$cluster <- as.character(clsMI$cluster)
f <- ggplot(data=dfMI,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfSE = df[df$experience_level=='SE',]
quantiles <- quantile(dfSE$salary_in_usd, c(0.05,0.95))
dfSE <- dfSE[dfSE$salary_in_usd > quantiles[1] & dfSE$salary_in_usd < quantiles[2],]
dfSE <- dfSE[c('salary_in_usd')]
clsSE <- kmeans(x=dfSE, centers=3)
dfSE$cluster <- as.character(clsSE$cluster)
f <- ggplot(data=dfSE,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfEX = df[df$experience_level=='EX',]
quantiles <- quantile(dfEX$salary_in_usd, c(0.05,0.95))
dfEX <- dfEX[dfEX$salary_in_usd > quantiles[1] & dfEX$salary_in_usd < quantiles[2],]
dfEX <- dfEX[c('salary_in_usd')]
clsEX <- kmeans(x=dfEX, centers=3)
dfEX$cluster <- as.character(clsEX$cluster)
f <- ggplot(data=dfEX,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
set.seed(42)
dfEN = df[df$experience_level=='EN',]
quantiles <- quantile(dfEN$salary_in_usd, c(0.05,0.95))
dfEN <- dfEN[dfEN$salary_in_usd > quantiles[1] & dfEN$salary_in_usd < quantiles[2],]
dfEN <- dfEN[c('salary_in_usd')]
clsEN <- kmeans(x=dfEN, centers=3)
dfEN$cluster <- as.character(clsEN$cluster)
f <- ggplot(data=dfEN,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfMI = df[df$experience_level=='MI',]
quantiles <- quantile(dfMI$salary_in_usd, c(0.05,0.95))
dfMI <- dfMI[dfMI$salary_in_usd > quantiles[1] & dfMI$salary_in_usd < quantiles[2],]
dfMI <- dfMI[c('salary_in_usd')]
clsMI <- kmeans(x=dfMI, centers=3)
dfMI$cluster <- as.character(clsMI$cluster)
f <- ggplot(data=dfMI,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfSE = df[df$experience_level=='SE',]
quantiles <- quantile(dfSE$salary_in_usd, c(0.05,0.95))
dfSE <- dfSE[dfSE$salary_in_usd > quantiles[1] & dfSE$salary_in_usd < quantiles[2],]
dfSE <- dfSE[c('salary_in_usd')]
clsSE <- kmeans(x=dfSE, centers=3)
dfSE$cluster <- as.character(clsSE$cluster)
f <- ggplot(data=dfSE,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfEX = df[df$experience_level=='EX',]
quantiles <- quantile(dfEX$salary_in_usd, c(0.05,0.95))
dfEX <- dfEX[dfEX$salary_in_usd > quantiles[1] & dfEX$salary_in_usd < quantiles[2],]
dfEX <- dfEX[c('salary_in_usd')]
clsEX <- kmeans(x=dfEX, centers=3)
dfEX$cluster <- as.character(clsEX$cluster)
f <- ggplot(data=dfEX,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
set.seed(42)
dfEN = df[df$experience_level=='EN',]
quantiles <- quantile(dfEN$salary_in_usd, c(0.05,0.95))
dfEN <- dfEN[dfEN$salary_in_usd > quantiles[1] & dfEN$salary_in_usd < quantiles[2],]
dfEN <- dfEN[c('salary_in_usd')]
clsEN <- kmeans(x=dfEN, centers=3)
dfEN$cluster <- as.character(clsEN$cluster)
f <- ggplot(data=dfEN,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfMI = df[df$experience_level=='MI',]
quantiles <- quantile(dfMI$salary_in_usd, c(0.05,0.95))
dfMI <- dfMI[dfMI$salary_in_usd > quantiles[1] & dfMI$salary_in_usd < quantiles[2],]
dfMI <- dfMI[c('salary_in_usd')]
clsMI <- kmeans(x=dfMI, centers=3)
dfMI$cluster <- as.character(clsMI$cluster)
f <- ggplot(data=dfMI,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfSE = df[df$experience_level=='SE',]
quantiles <- quantile(dfSE$salary_in_usd, c(0.05,0.95))
dfSE <- dfSE[dfSE$salary_in_usd > quantiles[1] & dfSE$salary_in_usd < quantiles[2],]
dfSE <- dfSE[c('salary_in_usd')]
clsSE <- kmeans(x=dfSE, centers=3)
dfSE$cluster <- as.character(clsSE$cluster)
f <- ggplot(data=dfSE,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
dfEX = df[df$experience_level=='EX',]
quantiles <- quantile(dfEX$salary_in_usd, c(0.05,0.95))
dfEX <- dfEX[dfEX$salary_in_usd > quantiles[1] & dfEX$salary_in_usd < quantiles[2],]
dfEX <- dfEX[c('salary_in_usd')]
clsEX <- kmeans(x=dfEX, centers=3)
dfEX$cluster <- as.character(clsEX$cluster)
f <- ggplot(data=dfEX,mapping=aes(x='EN',y=salary_in_usd))+
geom_violin(scale="count")+
geom_point(aes(colour=cluster))
f
entry_middle_mean = mean(dfEN$salary_currency[dfEN$cluster==2])
entry_middle_mean
entry_middle_mean = mean(dfEN$salary_currency[dfEN.loc(cluster==2)])
entry_middle_mean = mean(dfEN$salary_currency[dfEN$cluster==2])
entry_middle_mean
entry_middle_mean = dfEN$salary_currency[dfEN$cluster==2]
entry_middle_mean
entry_middle_mean = dfEN$salary_in_usd[dfEN$cluster==2]
entry_middle_mean
entry_middle_mean = mean(dfEN$salary_in_usd[dfEN$cluster==2])
entry_middle_mean
entry_fair_mean = mean(dfEN$salary_in_usd[dfEN$cluster==2])
middle_fair_mean = mean(dfMI$salary_in_usd[dfMI$cluster==2])
entry_fair_mean = mean(dfEN$salary_in_usd[dfEN$cluster==2])
middle_fair_mean = mean(dfMI$salary_in_usd[dfMI$cluster==2])
senior_fair_mean = mean(dfSE$salary_in_usd[dfSE$cluster==2])
expert_fair_mean = mean(dfEX$salary_in_usd[dfEX$cluster==2])
entry_fair_mean = mean(dfEN$salary_in_usd[dfEN$cluster==2])
middle_fair_mean = mean(dfMI$salary_in_usd[dfMI$cluster==2])
senior_fair_mean = mean(dfSE$salary_in_usd[dfSE$cluster==2])
expert_fair_mean = mean(dfEX$salary_in_usd[dfEX$cluster==2])
entry_to_middle = middle_fair_mean - entry_fair_mean
middle_to_senior = senior_fair_mean - middle_fair_mean
senior_to_expert = expert_fair_mean - senior_fair_mean
entry_to_middle
middle_to_senior
senior_to_expert
entry_fair_mean = mean(dfEN$salary_in_usd[dfEN$cluster==2])
middle_fair_mean = mean(dfMI$salary_in_usd[dfMI$cluster==2])
senior_fair_mean = mean(dfSE$salary_in_usd[dfSE$cluster==2])
expert_fair_mean = mean(dfEX$salary_in_usd[dfEX$cluster==2])
entry_to_middle = middle_fair_mean - entry_fair_mean
middle_to_senior = senior_fair_mean - middle_fair_mean
senior_to_expert = expert_fair_mean - senior_fair_mean
entry_fair_mean
middle_fair_mean
senior_fair_mean
expert_fair_mean
entry_to_middle
middle_to_senior
senior_to_expert
entry_fair_mean = mean(dfEN$salary_in_usd[dfEN$cluster==2])
middle_fair_mean = mean(dfMI$salary_in_usd[dfMI$cluster==2])
senior_fair_mean = mean(dfSE$salary_in_usd[dfSE$cluster==2])
expert_fair_mean = mean(dfEX$salary_in_usd[dfEX$cluster==2])
entry_to_middle_increase = middle_fair_mean - entry_fair_mean
middle_to_senior_increase  = senior_fair_mean - middle_fair_mean
senior_to_expert_increase  = expert_fair_mean - senior_fair_mean
entry_fair_mean
middle_fair_mean
senior_fair_mean
expert_fair_mean
entry_to_middle_increase
middle_to_senior_increase
senior_to_expert_increase
entry_to_middle_increase_absolute = middle_fair_mean - entry_fair_mean
middle_to_senior_increase_absolute  = senior_fair_mean - middle_fair_mean
senior_to_expert_increase_absolute  = expert_fair_mean - senior_fair_mean
entry_to_middle_increase_absolute
middle_to_senior_increase_absolute
senior_to_expert_increase_absolute
entry_to_middle_increase_relative = (entry_fair_mean+entry_to_middle_increase_absolute/entry_fair_mean)-100
entry_to_middle_increase_relative
entry_to_middle_increase_absolute = middle_fair_mean - entry_fair_mean
middle_to_senior_increase_absolute  = senior_fair_mean - middle_fair_mean
senior_to_expert_increase_absolute  = expert_fair_mean - senior_fair_mean
entry_to_middle_increase_absolute
middle_to_senior_increase_absolute
senior_to_expert_increase_absolute
entry_to_middle_increase_relative = ((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-100
entry_to_middle_increase_relative
entry_to_middle_increase_absolute = middle_fair_mean - entry_fair_mean
middle_to_senior_increase_absolute  = senior_fair_mean - middle_fair_mean
senior_to_expert_increase_absolute  = expert_fair_mean - senior_fair_mean
entry_to_middle_increase_absolute
middle_to_senior_increase_absolute
senior_to_expert_increase_absolute
entry_to_middle_increase_relative = ((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)
entry_to_middle_increase_relative
entry_to_middle_increase_absolute = middle_fair_mean - entry_fair_mean
middle_to_senior_increase_absolute  = senior_fair_mean - middle_fair_mean
senior_to_expert_increase_absolute  = expert_fair_mean - senior_fair_mean
entry_to_middle_increase_absolute
middle_to_senior_increase_absolute
senior_to_expert_increase_absolute
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
entry_to_middle_increase_relative
entry_fair_mean = mean(dfEN$salary_in_usd[dfEN$cluster==2])
middle_fair_mean = mean(dfMI$salary_in_usd[dfMI$cluster==2])
senior_fair_mean = mean(dfSE$salary_in_usd[dfSE$cluster==2])
expert_fair_mean = mean(dfEX$salary_in_usd[dfEX$cluster==2])
entry_fair_mean
middle_fair_mean
senior_fair_mean
expert_fair_mean
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
middle_to_senior_increase_relative = (((middle_fair_mean+middle_to_senior_increase_absolute)/middle_fair_mean)-1)
senior_to_expert_increase_relative = (((senior_fair_mean+senior_to_expert_increase_absolute)/senior_fair_mean)-1)
entry_to_middle_increase_relative
middle_to_senior_increase_relative
senior_to_expert_increase_relative
entry_to_middle_increase_absolute = middle_fair_mean - entry_fair_mean
middle_to_senior_increase_absolute  = senior_fair_mean - middle_fair_mean
senior_to_expert_increase_absolute  = expert_fair_mean - senior_fair_mean
entry_to_middle_increase_absolute
middle_to_senior_increase_absolute
senior_to_expert_increase_absolute
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
middle_to_senior_increase_relative = (((middle_fair_mean+middle_to_senior_increase_absolute)/middle_fair_mean)-1)
senior_to_expert_increase_relative = (((senior_fair_mean+senior_to_expert_increase_absolute)/senior_fair_mean)-1)
entry_to_middle_increase_relative+"%"
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
middle_to_senior_increase_relative = (((middle_fair_mean+middle_to_senior_increase_absolute)/middle_fair_mean)-1)
senior_to_expert_increase_relative = (((senior_fair_mean+senior_to_expert_increase_absolute)/senior_fair_mean)-1)
cat(entry_to_middle_increase_relative+"%")
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
middle_to_senior_increase_relative = (((middle_fair_mean+middle_to_senior_increase_absolute)/middle_fair_mean)-1)
senior_to_expert_increase_relative = (((senior_fair_mean+senior_to_expert_increase_absolute)/senior_fair_mean)-1)
cat(""+entry_to_middle_increase_relative+"%")
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
middle_to_senior_increase_relative = (((middle_fair_mean+middle_to_senior_increase_absolute)/middle_fair_mean)-1)
senior_to_expert_increase_relative = (((senior_fair_mean+senior_to_expert_increase_absolute)/senior_fair_mean)-1)
cat(" "+entry_to_middle_increase_relative+"%")
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
middle_to_senior_increase_relative = (((middle_fair_mean+middle_to_senior_increase_absolute)/middle_fair_mean)-1)
senior_to_expert_increase_relative = (((senior_fair_mean+senior_to_expert_increase_absolute)/senior_fair_mean)-1)
cat(entry_to_middle_increase_relative,"%")
middle_to_senior_increase_relative
senior_to_expert_increase_relative
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
middle_to_senior_increase_relative = (((middle_fair_mean+middle_to_senior_increase_absolute)/middle_fair_mean)-1)
senior_to_expert_increase_relative = (((senior_fair_mean+senior_to_expert_increase_absolute)/senior_fair_mean)-1)
cat(entry_to_middle_increase_relative,"%\n")
middle_to_senior_increase_relative
senior_to_expert_increase_relative
entry_to_middle_increase_relative = (((entry_fair_mean+entry_to_middle_increase_absolute)/entry_fair_mean)-1)
middle_to_senior_increase_relative = (((middle_fair_mean+middle_to_senior_increase_absolute)/middle_fair_mean)-1)
senior_to_expert_increase_relative = (((senior_fair_mean+senior_to_expert_increase_absolute)/senior_fair_mean)-1)
cat(entry_to_middle_increase_relative*100,"%\n")
cat(middle_to_senior_increase_relative*100,"%\n")
cat(senior_to_expert_increase_relative*100, "%\n")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
install.packages("vctrs")
library(ggplot2)
library(dplyr)
library(ggdist)
library(tidyverse)
library(plotly)
install.packages(c("cli", "digest", "htmltools", "isoband"))
install.packages(c("cli", "digest", "htmltools", "isoband"))
